name: release-package
on:
  push:
    branches:
      - release

env:
  SCOPE: simatic-ax
  ACTIONS_REPO: simatic-ax/actions
  ACTIONS_LOCAL: ./actions
  VERSIONING_TOOL_REPO: simatic-ax/simatic_versioning

jobs:
  versioning:
    name: "Bump the version of the package according to the conventional commit"
    runs-on: ubuntu-latest
    steps:
      - name: "Clone the library repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Clone repository for CI workflows"
        uses: actions/checkout@v3
        with:
          repository: ${{ env.ACTIONS_REPO }}
          token: ${{ secrets.CI_KIT_TOKEN }}
          path: ./actions

      - name: "Check contents of actions folder"
        run: tree -d ./actions
      - name: "Install apax and dependencies"
        uses: ./actions/.github/actions/setup-apax-runner
        with:
          apax-access-token: ${{ secrets.APAX_TOKEN }}

      - name: "Get latest simatic-versioning executable"
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ env.VERSIONING_TOOL_REPO }}
          file: "conventional-commit"
          token: ${{ secrets.CI_KIT_TOKEN }}

      - name: "Get the latest version of the package"
        run: |
          echo "_auth=\"${{ secrets.GITHUB_TOKEN }}\" >> .npmrc
          echo "email="krueger.felix@siemens.com" " >> .npmrc
          echo "always-auth=true" >> .npmrc

          PACKAGE="$(grep -oP '(?<=\").+.apax\.tgz(?=\")' .package.err)"
          npm login --scope=@${{ env.SCOPE }} --registry=https://npm.pkg.github.com
          npm show @${{ env.SCOPE }}/$PACKAGE version

      - name: "Bump version"
        run: |
          ls -a
          pwd
          sudo chmod +x ./conventional-commit
          sudo ./conventional-commit \
          --commit-message "${{ github.event.head_commit.message }}" \
          --path . \
          --update \

  # build:
  #   name: "Build apax library"
  #   runs-on: ubuntu-latest
  #   needs: versioning
  #   steps:
  #     - name: "Clone the library repository"
  #       uses: actions/checkout@v3

  #     - name: "Clone repository for CI workflows"
  #       uses: actions/checkout@v3
  #       with:
  #         repository: ${{ env.ACTIONS_REPO }}
  #         token: ${{ secrets.CI_KIT_TOKEN }}
  #         path: ./actions

  #     - name: "Install apax and dependencies"
  #       uses: ./actions/.github/actions/setup-apax-runner
  #       with:
  #         apax-access-token: ${{ secrets.APAX_TOKEN }}

  #     - name: "Build apax library"
  #       uses: ./ax_ci_workflows/.github/actions/build-apax
  #       with:
  #         library-directory: ${{ github.workspace }}
  #         apax-access-token: ${{ secrets.APAX_TOKEN }}

  #     - name: "Upload artifact"
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: library-artifact
  #         path: bin/

  # test:
  #   name: "Test apax library"
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: "Clone the library repository"
  #       uses: actions/checkout@v3

  #     - name: "Clone repository for CI workflows"
  #       uses: actions/checkout@v3
  #       with:
  #         repository: kruegerfelix/ax_ci_workflows
  #         token: ${{ secrets.CI_KIT_TOKEN }}
  #         path: ax_ci_workflows

  #     - name: "Install apax and dependencies"
  #       uses: ./ax_ci_workflows/.github/actions/setup-apax-runner
  #       with:
  #         apax-access-token: ${{ secrets.APAX_TOKEN }}

  #     - name: "Build apax library"
  #       uses: ./ax_ci_workflows/.github/actions/build-apax
  #       with:
  #         library-directory: ${{ github.workspace }}
  #         apax-access-token: ${{ secrets.APAX_TOKEN }}

  #     - name: "Test apax package"
  #       run: apax test

  release:
    name: "Release binary"
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: "Clone the library repository"
        uses: actions/checkout@v3

      - name: "Clone repository for CI workflows"
        uses: actions/checkout@v3
        with:
          repository: kruegerfelix/ax_ci_workflows
          token: ${{ secrets.CI_KIT_TOKEN }}
          path: ax_ci_workflows

      - name: "Install apax and dependencies"
        uses: ./ax_ci_workflows/.github/actions/setup-apax-runner
        with:
          apax-access-token: ${{ secrets.APAX_TOKEN }}

      - name: "Download artifact"
        uses: actions/download-artifact@v3
        with:
          name: library-artifact

      - name: "Login to the private repo"
        run: |
          apax login \
          --registry "https://npm.pkg.github.com" \
          --password ${{ secrets.CI_KIT_TOKEN }}

      - name: "Pack and publish the library"
        run: |
          apax pack 2>.package.err 1>.signature
          PACKAGE="$(grep -oP '(?<=\").+.apax\.tgz(?=\")' .package.err)"
          apax publish --package $PACKAGE --registry https://npm.pkg.github.com
